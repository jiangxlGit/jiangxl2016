package com.jiang.dao;

import java.util.List;

import org.hibernate.FlushMode;
import org.hibernate.Session;

import com.jiang.util.HibernateSessionFactory;

/**
 * 
 * @功能概要： 微信公众号DAO层<br>
 * @项目名称： MDOS<br>
 * @初创作者： jiangxl <link 836200494@qq.com><br>
 * @公司名称： ShenZhen Montnets Technology CO.,LTD.<br>
 * @创建时间： 2016-10-25 下午12:36:42<br>
 * @param <T>
 */
public class WeixinDao<T> implements DaoInterface<T>{

	public void create(T object){
		Session session = null;
		try {
			//1、开启一个Hibernate会话
			session = HibernateSessionFactory.getSession();
			//2、开启一个Hibernate事务
			session.beginTransaction();
			//3、写入数据到数据库中
			session.persist(object);
			//4、提交事务
			session.getTransaction().commit();
		} catch (Exception e) {
			//5、若抛出异常则回滚
			session.getTransaction().rollback();
		} finally {
			//6、最后关闭session
			if( session != null){
				session.close();
			}
		}	
	}
	
	@SuppressWarnings("unchecked")
	public List<T> list(String hql) {
		Session session = HibernateSessionFactory.getSession();
		session.setFlushMode(FlushMode.COMMIT);//提交时和flush()时清理缓存
		try {
			session.beginTransaction();
			return session.createQuery(hql).list();
		} finally {
			session.getTransaction().commit();
			session.close();
		}
	}
	
	@SuppressWarnings("unchecked")
	public T findByClassAndId(Class<? extends T> tClass, Integer id){
		Session session = HibernateSessionFactory.getSession();
		session.setFlushMode(FlushMode.COMMIT);//提交时和flush()时清理缓存
		try {
			session.beginTransaction();
			return (T) session.get(tClass, id);
		} finally {
			session.getTransaction().commit();
			if(session!=null){
				session.close();
			}
		}
	}
	
	@SuppressWarnings("unchecked")
	public List<T> findById(String id){
		Session session = HibernateSessionFactory.getSession();
		session.setFlushMode(FlushMode.COMMIT);//提交时和flush()时清理缓存
		String hql = " FROM Student WHERE student_id = '" + id + "' ";
		try {
			session.beginTransaction();
			return session.createQuery(hql).list();
		} finally {
			session.getTransaction().commit();
			if(session!=null){
				session.close();
			}
		}
	}
	
}
